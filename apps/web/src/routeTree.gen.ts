/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MarketsRouteRouteImport } from './routes/markets/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as ProtectedRouteRouteImport } from './routes/_protected/route'
import { Route as MainRouteRouteImport } from './routes/_main/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketsIndexRouteImport } from './routes/markets/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardAccountRouteImport } from './routes/dashboard/account'
import { Route as MainLeaderboardRouteImport } from './routes/_main/leaderboard'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as MarketsMarketIdIndexRouteImport } from './routes/markets/$marketId/index'
import { Route as ProtectedAccountIndexRouteImport } from './routes/_protected/account/index'
import { Route as MarketsMarketIdTradeSuccessRouteImport } from './routes/markets/$marketId/trade-success'

const MarketsRouteRoute = MarketsRouteRouteImport.update({
  id: '/markets',
  path: '/markets',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRouteRoute = ProtectedRouteRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const MainRouteRoute = MainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketsIndexRoute = MarketsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketsRouteRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAccountRoute = DashboardAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const MainLeaderboardRoute = MainLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => MainRouteRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const MarketsMarketIdIndexRoute = MarketsMarketIdIndexRouteImport.update({
  id: '/$marketId/',
  path: '/$marketId/',
  getParentRoute: () => MarketsRouteRoute,
} as any)
const ProtectedAccountIndexRoute = ProtectedAccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const MarketsMarketIdTradeSuccessRoute =
  MarketsMarketIdTradeSuccessRouteImport.update({
    id: '/$marketId/trade-success',
    path: '/$marketId/trade-success',
    getParentRoute: () => MarketsRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/markets': typeof MarketsRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/leaderboard': typeof MainLeaderboardRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/markets/': typeof MarketsIndexRoute
  '/markets/$marketId/trade-success': typeof MarketsMarketIdTradeSuccessRoute
  '/account': typeof ProtectedAccountIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/leaderboard': typeof MainLeaderboardRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard': typeof DashboardIndexRoute
  '/markets': typeof MarketsIndexRoute
  '/markets/$marketId/trade-success': typeof MarketsMarketIdTradeSuccessRoute
  '/account': typeof ProtectedAccountIndexRoute
  '/markets/$marketId': typeof MarketsMarketIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_main': typeof MainRouteRouteWithChildren
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/markets': typeof MarketsRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_main/leaderboard': typeof MainLeaderboardRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/markets/': typeof MarketsIndexRoute
  '/markets/$marketId/trade-success': typeof MarketsMarketIdTradeSuccessRoute
  '/_protected/account/': typeof ProtectedAccountIndexRoute
  '/markets/$marketId/': typeof MarketsMarketIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/markets'
    | '/login'
    | '/signup'
    | '/leaderboard'
    | '/dashboard/account'
    | '/dashboard/'
    | '/markets/'
    | '/markets/$marketId/trade-success'
    | '/account'
    | '/markets/$marketId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/leaderboard'
    | '/dashboard/account'
    | '/dashboard'
    | '/markets'
    | '/markets/$marketId/trade-success'
    | '/account'
    | '/markets/$marketId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_main'
    | '/_protected'
    | '/dashboard'
    | '/markets'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_main/leaderboard'
    | '/dashboard/account'
    | '/dashboard/'
    | '/markets/'
    | '/markets/$marketId/trade-success'
    | '/_protected/account/'
    | '/markets/$marketId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  MainRouteRoute: typeof MainRouteRouteWithChildren
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  MarketsRouteRoute: typeof MarketsRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/markets': {
      id: '/markets'
      path: '/markets'
      fullPath: '/markets'
      preLoaderRoute: typeof MarketsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/markets/': {
      id: '/markets/'
      path: '/'
      fullPath: '/markets/'
      preLoaderRoute: typeof MarketsIndexRouteImport
      parentRoute: typeof MarketsRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_main/leaderboard': {
      id: '/_main/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof MainLeaderboardRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/markets/$marketId/': {
      id: '/markets/$marketId/'
      path: '/$marketId'
      fullPath: '/markets/$marketId'
      preLoaderRoute: typeof MarketsMarketIdIndexRouteImport
      parentRoute: typeof MarketsRouteRoute
    }
    '/_protected/account/': {
      id: '/_protected/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof ProtectedAccountIndexRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/markets/$marketId/trade-success': {
      id: '/markets/$marketId/trade-success'
      path: '/$marketId/trade-success'
      fullPath: '/markets/$marketId/trade-success'
      preLoaderRoute: typeof MarketsMarketIdTradeSuccessRouteImport
      parentRoute: typeof MarketsRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface MainRouteRouteChildren {
  MainLeaderboardRoute: typeof MainLeaderboardRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainLeaderboardRoute: MainLeaderboardRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

interface ProtectedRouteRouteChildren {
  ProtectedAccountIndexRoute: typeof ProtectedAccountIndexRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedAccountIndexRoute: ProtectedAccountIndexRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface MarketsRouteRouteChildren {
  MarketsIndexRoute: typeof MarketsIndexRoute
  MarketsMarketIdTradeSuccessRoute: typeof MarketsMarketIdTradeSuccessRoute
  MarketsMarketIdIndexRoute: typeof MarketsMarketIdIndexRoute
}

const MarketsRouteRouteChildren: MarketsRouteRouteChildren = {
  MarketsIndexRoute: MarketsIndexRoute,
  MarketsMarketIdTradeSuccessRoute: MarketsMarketIdTradeSuccessRoute,
  MarketsMarketIdIndexRoute: MarketsMarketIdIndexRoute,
}

const MarketsRouteRouteWithChildren = MarketsRouteRoute._addFileChildren(
  MarketsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  MainRouteRoute: MainRouteRouteWithChildren,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  MarketsRouteRoute: MarketsRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
